# configure
image: python:latest
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"  # cache on project level
cache:
  paths:
    - .cache/pip
    - venv/


# common to all scripts
before_script:
  - python -V
  - pip install -U virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -U "flit<3.2" "flit_core<3.2"
  - pip install -U pytest
  - pip install -U mypy
  - pip install -U yaqc
  - pip install -U numpy
  - pip install -U yaq-traits
  - pip install ./yaqc
  - pip install ./yaqd-core
  - pip install ./yaqd-fakes


# test stage
mypy:
  stage: test
  script:
    - pip install -U types-toml
    - mypy yaqd-core/yaqd_core
    - mypy yaqc/yaqc
    - mypy yaqd-fakes/yaqd_fakes
entry:
  stage: test
  script:
    - yaqd-fake-continuous-hardware --version
    - yaqd-fake-continuous-hardware --help
    - yaqd-fake-discrete-hardware --version
    - yaqd-fake-discrete-hardware --help
    - yaqd-fake-triggered-sensor --version
    - yaqd-fake-triggered-sensor --help
    - yaqd-fake-has-turret --version
    - yaqd-fake-has-turret --help
    - yaqd-fake-sensor --version
    - yaqd-fake-sensor --help
    - yaqd-fake-spectrometer --version
    - yaqd-fake-spectrometer --help
traits:
  stage: test
  script:
    - yaq-traits check yaqd-fakes/yaqd_fakes/fake-continuous-hardware.avpr
    - yaq-traits check yaqd-fakes/yaqd_fakes/fake-discrete-hardware.avpr
    - yaq-traits check yaqd-fakes/yaqd_fakes/fake-triggered-sensor.avpr
.pytest: &pytest
  stage: test
  script:
    - cd tests
    - pytest --junitxml=report.xml
  artifacts:
    reports:
      junit: tests/report.xml
pytest-latest:
  image: python:latest
  <<: *pytest
pytest-3.7:
  image: python:3.7
  <<: *pytest
pytest-3.8:
  image: python:3.8
  <<: *pytest
pytest-3.9:
  image: python:3.9
  <<: *pytest
pytest-3.10:
  image: python:3.10
  <<: *pytest
pytest-3.10-windows:
  tags:
    - shared-windows
    - windows
    - windows-1809
  before_script:
    - choco install python --version=3.10 -y
    - $env:PATH+=";C:\Python310;C:\Python310\Scripts" # add to PATH without restart
    - python -V
    - pip install -U "flit<3.2" "flit_core<3.2"
    - pip install -U pytest
    - pip install -U mypy
    - pip install -U yaqc
    - pip install -U numpy
    - pip install -U yaq-traits
    - pip install ./yaqc
    - pip install ./yaqd-core
    - pip install ./yaqd-fakes
  <<: *pytest


# deploy stage
pages-yaqd-core:
  stage: deploy
  script:
  - pip install -U pdoc
  - cd yaqd-core
  - pdoc yaqd_core -o public -d numpy
  artifacts:
    paths:
    - public
  only:
    - /^yaqd-core-.*$/
  except:
    - branches
flit-yaqc:
  stage: deploy
  script:
    - cd yaqc
    - FLIT_PASSWORD=$YAQC_TOKEN flit publish
  artifacts:
    paths:
      - yaqc/dist/*
  only:
    - /^yaqc-.*$/
  except:
    - branches
flit-yaqd-core:
  stage: deploy
  script:
    - cd yaqd-core
    - FLIT_PASSWORD=$YAQD_CORE_TOKEN flit publish
  artifacts:
    paths:
      - yaqd-core/dist/*
  only:
    - /^yaqd-core-.*$/
  except:
    - branches
flit-yaqd-fakes:
  stage: deploy
  script:
    - cd yaqd-fakes
    - FLIT_PASSWORD=$YAQD_FAKES_TOKEN flit publish
  artifacts:
    paths:
      - yaqd-fakes/dist/*
  only:
    - /^yaqd-fakes-.*$/
  except:
    - branches
